local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'

local function base64Decode(data)
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='', (b:find(x)-1)
        for i = 6, 1, -1 do
            r = r .. (f % 2 ^ i - f % 2 ^ (i - 1) > 0 and '1' or '0')
        end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c = 0
        for i = 1, 8 do
            c = c + (x:sub(i,i) == '1' and 2^(8-i) or 0)
        end
        return string.char(c)
    end))
end

local function runBase64(encoded)
    local decoded = base64Decode(encoded)
    print("[Base64 Decoded]:", decoded) 
    local func = loadstring(decoded)  
    if func then
        func() 
    else
        warn("Không thể load code từ Base64!")
    end
end

local encodedCode = "bG9jYWwgYiA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJw0KDQpsb2NhbCBmdW5jdGlvbiBiYXNlNjREZWNvZGUoZGF0YSkNCiAgICBkYXRhID0gc3RyaW5nLmdzdWIoZGF0YSwgJ1teJy4uYi4uJz1dJywgJycpDQogICAgcmV0dXJuIChkYXRhOmdzdWIoJy4nLCBmdW5jdGlvbih4KQ0KICAgICAgICBpZiAoeCA9PSAnPScpIHRoZW4gcmV0dXJuICcnIGVuZA0KICAgICAgICBsb2NhbCByLGY9JycsIChiOmZpbmQoeCktMSkNCiAgICAgICAgZm9yIGkgPSA2LCAxLCAtMSBkbw0KICAgICAgICAgICAgciA9IHIgLi4gKGYgJSAyIF4gaSAtIGYgJSAyIF4gKGkgLSAxKSA+IDAgYW5kICcxJyBvciAnMCcpDQogICAgICAgIGVuZA0KICAgICAgICByZXR1cm4gcg0KICAgIGVuZCk6Z3N1YignJWQlZCVkPyVkPyVkPyVkPyVkPyVkPycsIGZ1bmN0aW9uKHgpDQogICAgICAgIGlmICgjeCB+PSA4KSB0aGVuIHJldHVybiAnJyBlbmQNCiAgICAgICAgbG9jYWwgYyA9IDANCiAgICAgICAgZm9yIGkgPSAxLCA4IGRvDQogICAgICAgICAgICBjID0gYyArICh4OnN1YihpLGkpID09ICcxJyBhbmQgMl4oOC1pKSBvciAwKQ0KICAgICAgICBlbmQNCiAgICAgICAgcmV0dXJuIHN0cmluZy5jaGFyKGMpDQogICAgZW5kKSkNCmVuZA0KDQpsb2NhbCBmdW5jdGlvbiBydW5CYXNlNjQoZW5jb2RlZCkNCiAgICBsb2NhbCBkZWNvZGVkID0gYmFzZTY0RGVjb2RlKGVuY29kZWQpDQogICAgcHJpbnQoIltCYXNlNjQgRGVjb2RlZF06IiwgZGVjb2RlZCkgDQogICAgbG9jYWwgZnVuYyA9IGxvYWRzdHJpbmcoZGVjb2RlZCkgIA0KICAgIGlmIGZ1bmMgdGhlbg0KICAgICAgICBmdW5jKCkgDQogICAgZWxzZQ0KICAgICAgICB3YXJuKCJLaMO0bmcgdGjhu4MgbG9hZCBjb2RlIHThu6sgQmFzZTY0ISIpDQogICAgZW5kDQplbmQNCg0KbG9jYWwgZW5jb2RlZENvZGUgPSAiRFFwc2IyTmhiQ0JTWVhsbWFXVnNaQ0E5SUd4dllXUnpkSEpwYm1jb1oyRnRaVHBJZEhSd1IyVjBLQ2RvZEhSd2N6b3ZMM05wY21sMWN5NXRaVzUxTDNKaGVXWnBaV3hrSnlrcEtDa05DZzBLYkc5allXd2dWMmx1Wkc5M0lEMGdVbUY1Wm1sbGJHUTZRM0psWVhSbFYybHVaRzkzS0hzTkNpQWdJQ0JPWVcxbElEMGdJazVIVHlCVVFVNGdVMEZPUnlJc0RRb2dJQ0FnVEc5aFpHbHVaMVJwZEd4bElEMGdJbFRFZ2s1SElGaFFJRkJGVkNJc0RRb2dJQ0FnVEc5aFpHbHVaMU4xWW5ScGRHeGxJRDBnSW5Cb2FjT3FiaUJpNGJxamJpQXhJaXdOQ2lBZ0lDQkRiMjVtYVdkMWNtRjBhVzl1VTJGMmFXNW5JRDBnZXcwS0lDQWdJQ0FnSUNCRmJtRmliR1ZrSUQwZ1ptRnNjMlVzRFFvZ0lDQWdmU3dOQ2lBZ0lDQkVhWE5qYjNKa0lEMGdldzBLSUNBZ0lDQWdJQ0JGYm1GaWJHVmtJRDBnWm1Gc2MyVXNEUW9nSUNBZ2ZRMEtmU2tOQ2cwS2JHOWpZV3dnVFdGcGJsUmhZaUE5SUZkcGJtUnZkenBEY21WaGRHVlVZV0lvSWsxaGFXNGlMQ0EwTkRnek16WXlORFU0S1EwS0RRcHNiMk5oYkNCeWRXNXVhVzVuSUQwZ1ptRnNjMlVOQ214dlkyRnNJR3h2YjNCRVpXeGhlU0E5SURNZ0RRb05DazFoYVc1VVlXSTZRM0psWVhSbFUyeHBaR1Z5S0hzTkNpQWdJQ0JPWVcxbElEMGdJbFJvNGJ1ZGFTQm5hV0Z1SUd6aHVyZHdJR3podXFGcElDaG5hY09pZVNraUxBMEtJQ0FnSUZKaGJtZGxJRDBnZXpFc0lETXdmU3dnRFFvZ0lDQWdTVzVqY21WdFpXNTBJRDBnTVN3TkNpQWdJQ0JUZFdabWFYZ2dQU0FpY3lJc0RRb2dJQ0FnUTNWeWNtVnVkRlpoYkhWbElEMGdiRzl2Y0VSbGJHRjVMQTBLSUNBZ0lFWnNZV2NnUFNBaVRHOXZjRVJsYkdGNUlpd05DaUFnSUNCRFlXeHNZbUZqYXlBOUlHWjFibU4wYVc5dUtGWmhiSFZsS1EwS0lDQWdJQ0FnSUNCc2IyOXdSR1ZzWVhrZ1BTQldZV3gxWlEwS0lDQWdJR1Z1WkN3TkNuMHBEUW9OQ2sxaGFXNVVZV0k2UTNKbFlYUmxWRzluWjJ4bEtIc05DaUFnSUNCT1lXMWxJRDBnSWxURWcyNW5JR3RwYm1nZ2JtZG9hZUc3aDIwaUxBMEtJQ0FnSUVOMWNuSmxiblJXWVd4MVpTQTlJR1poYkhObExBMEtJQ0FnSUVac1lXY2dQU0FpUVhWMGIwVjRjQ0lzRFFvZ0lDQWdRMkZzYkdKaFkyc2dQU0JtZFc1amRHbHZiaWhXWVd4MVpTa05DaUFnSUNBZ0lDQWdjblZ1Ym1sdVp5QTlJRlpoYkhWbERRb2dJQ0FnSUNBZ0lHbG1JRlpoYkhWbElIUm9aVzROQ2lBZ0lDQWdJQ0FnSUNBZ0lIUmhjMnN1YzNCaGQyNG9ablZ1WTNScGIyNG9LUTBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRvYVd4bElISjFibTVwYm1jZ1pHOE5DaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkc5allXd2djR1YwYzBadmJHUmxjaUE5SUhkdmNtdHpjR0ZqWlRwR2FXNWtSbWx5YzNSRGFHbHNaQ2dpVUdWMGMxQm9lWE5wWTJGc0lpa05DaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ2JtOTBJSEJsZEhOR2IyeGtaWElnZEdobGJnMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QyRnliaWdpNHBxZzc3aVBJRXRvdzdSdVp5QjB3Nnh0SUhSbzRicWxlU0JRWlhSelVHaDVjMmxqWVd3aUtRMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3NOQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNWtEUW9OQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHOWpZV3dnY0dWMFNXUnpJRDBnZTMwTkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiRzlqWVd3Z2RYVnBaRkJoZEhSbGNtNGdQU0FpV3pBdE9XRXRaa0V0UmlVdFhTc2lEUW9OQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlJRjhzSUhCbGRDQnBiaUJwY0dGcGNuTW9jR1YwYzBadmJHUmxjanBIWlhSRGFHbHNaSEpsYmlncEtTQmtidzBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5SUd0bGVTd2dkbUZzZFdVZ2FXNGdjR0ZwY25Nb2NHVjBPa2RsZEVGMGRISnBZblYwWlhNb0tTa2daRzhOQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQjBlWEJsYjJZb2RtRnNkV1VwSUQwOUlDSnpkSEpwYm1jaUlHRnVaQ0J6ZEhKcGJtY3ViV0YwWTJnb2RtRnNkV1VzSUhWMWFXUlFZWFIwWlhKdUtTQjBhR1Z1RFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJoWW14bExtbHVjMlZ5ZENod1pYUkpaSE1zSUhaaGJIVmxLUTBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdVpBMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNWtEUW9OQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lCZkxDQmphR2xzWkNCcGJpQnBjR0ZwY25Nb2NHVjBPa2RsZEVSbGMyTmxibVJoYm5SektDa3BJR1J2RFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdZMmhwYkdRNlNYTkJLQ0pXWVd4MVpVSmhjMlVpS1NCaGJtUWdkSGx3Wlc5bUtHTm9hV3hrTGxaaGJIVmxLU0E5UFNBaWMzUnlhVzVuSWlCMGFHVnVEUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JSE4wY21sdVp5NXRZWFJqYUNoamFHbHNaQzVXWVd4MVpTd2dkWFZwWkZCaGRIUmxjbTRwSUhSb1pXNE5DaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJoWW14bExtbHVjMlZ5ZENod1pYUkpaSE1zSUdOb2FXeGtMbFpoYkhWbEtRMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJtUU5DaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm1RTkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdVpBMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm1RTkNnMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJZ1h5d2dhV1FnYVc0Z2FYQmhhWEp6S0hCbGRFbGtjeWtnWkc4TkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4dlkyRnNJR0Z5WjNNZ1BTQjdEUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnV3pGZElEMGdJbFZ1WlhGMWFYQlFaWFFpTEEwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGc3lYU0E5SUdsa0RRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOURRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbllXMWxPa2RsZEZObGNuWnBZMlVvSWxKbGNHeHBZMkYwWldSVGRHOXlZV2RsSWlrdVIyRnRaVVYyWlc1MGN5NVFaWFJ6VTJWeWRtbGpaVHBHYVhKbFUyVnlkbVZ5S0hWdWNHRmpheWhoY21kektTa05DaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmhjMnN1ZDJGcGRDZ3dMakVwRFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnVaQTBLRFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmhjMnN1ZDJGcGRDZ3dMaklwRFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUJmTENCcFpDQnBiaUJwY0dGcGNuTW9jR1YwU1dSektTQmtidzBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiRzlqWVd3Z1lYSm5jeUE5SUhzTkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmJNVjBnUFNBaVJYRjFhWEJRWlhRaUxBMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRnN5WFNBOUlHbGtMQTBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZzelhTQTlJRU5HY21GdFpTNXVaWGNvTXpRdU5EWTNORGs0TnpjNU1qazJPRGMxTENBd0xDQXRNVEl6TGpjMU16TXhPRGM0TmpZeU1URXBJQ29nUTBaeVlXMWxMa0Z1WjJ4bGN5Z3RNQ3dnTUN3Z0xUQXBEUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlEUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm5ZVzFsT2tkbGRGTmxjblpwWTJVb0lsSmxjR3hwWTJGMFpXUlRkRzl5WVdkbElpa3VSMkZ0WlVWMlpXNTBjeTVRWlhSelUyVnlkbWxqWlRwR2FYSmxVMlZ5ZG1WeUtIVnVjR0ZqYXloaGNtZHpLU2tOQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJoYzJzdWQyRnBkQ2d3TGpFcERRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1WkEwS0RRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJoYzJzdWQyRnBkQ2hzYjI5d1JHVnNZWGtwRFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlc1a0RRb2dJQ0FnSUNBZ0lDQWdJQ0JsYm1RcERRb2dJQ0FnSUNBZ0lHVnVaQTBLSUNBZ0lHVnVaQTBLZlNrPSIgIA0KcnVuQmFzZTY0KGVuY29kZWRDb2RlKQ=="  
runBase64(encodedCode)
